void bucketSort(int array[], int n) {

int i, j;

int max = array[0];

for (i = 1; i < n; i++) {

if (array[i] > max) {

max = array[i];

}

}

int bucket[max + 1];

for (i = 0; i <= max; i++) {

bucket[i] = 0;

}

for (i = 0; i < n; i++) {

bucket[array[i]]++;

}

int index = 0;

for (i = 0; i <= max; i++) {

while (bucket[i] > 0) {

array[index++] = i;

bucket[i]--;

}

}

}

void radixSort(int a[], int n) {

int count[10], bucket[20][20];

int large = a[0], i, j;

for(i = 0; i < n; i++) {

if(a[i] > large) {

large = a[i];

}

}

int pass = 0;

while(large > 0) {

pass++;

large = large / 10;

}

int div = 1;

for(i = 1; i <= pass; i++) {

for(j = 0; j <= 9; j++) {

count[j] = 0;

}

for(j = 0; j < n; j++) {

int bucketno = (a[j] / div) % 10;

bucket[bucketno][count[bucketno]] = a[j];

count[bucketno]++;

}

int k = 0;

for(j = 0; j <= 9; j++) {

for(int l = 0; l < count[j]; l++) {

a[k] = bucket[j][l];

k++;

}

}

div = div*10;

}

}

int main() {

int n;

int choice;

int marks[10];

printf("Enter number of students: ");

scanf("%d", &n);

printf("Enter %d marks:\n", n);

for (int i = 0; i < n; i++) {

scanf("%d", &marks[i]);

}

printf("Choose algorithm:\n");

printf("1. Bucket Sort\n");

printf("2. Radix Sort\n");

printf("Enter your choice (1 or 2): ");

scanf("%d", &choice);

switch (choice) {

case 1:

bucketSort(marks, n);

break;

case 2:

radixSort(marks,n);

break;

default:

printf("Invalid choice!\n");

return 1;

}

printf("\nSorted array:\n");

printf("| Index | Value |\n");

for (int i = 0; i < n; i++) {

printf("| %d | \t%d |\n", i, marks[i]);

}

return 0;

}
 

